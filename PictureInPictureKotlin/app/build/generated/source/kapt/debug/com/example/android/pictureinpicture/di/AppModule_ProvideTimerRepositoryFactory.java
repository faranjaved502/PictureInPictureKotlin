// Generated by Dagger (https://dagger.dev).
package com.example.android.pictureinpicture.di;

import com.example.android.pictureinpicture.repository.TimerRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideTimerRepositoryFactory implements Factory<TimerRepository> {
  private final AppModule module;

  public AppModule_ProvideTimerRepositoryFactory(AppModule module) {
    this.module = module;
  }

  @Override
  public TimerRepository get() {
    return provideTimerRepository(module);
  }

  public static AppModule_ProvideTimerRepositoryFactory create(AppModule module) {
    return new AppModule_ProvideTimerRepositoryFactory(module);
  }

  public static TimerRepository provideTimerRepository(AppModule instance) {
    return Preconditions.checkNotNullFromProvides(instance.provideTimerRepository());
  }
}
